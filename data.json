[{"model": "admin.logentry", "pk": 1, "fields": {"action_time": "2023-09-15T03:31:12.608Z", "user": 1, "content_type": 7, "object_id": "1", "object_repr": "hello", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 2, "fields": {"action_time": "2023-09-15T03:32:40.174Z", "user": 1, "content_type": 7, "object_id": "1", "object_repr": "hello", "action_flag": 2, "change_message": "[]"}}, {"model": "admin.logentry", "pk": 3, "fields": {"action_time": "2023-09-15T03:32:44.425Z", "user": 1, "content_type": 7, "object_id": "1", "object_repr": "hello", "action_flag": 2, "change_message": "[]"}}, {"model": "admin.logentry", "pk": 4, "fields": {"action_time": "2023-09-15T03:33:21.544Z", "user": 1, "content_type": 7, "object_id": "1", "object_repr": "hello", "action_flag": 2, "change_message": "[]"}}, {"model": "admin.logentry", "pk": 5, "fields": {"action_time": "2023-09-15T03:33:31.839Z", "user": 1, "content_type": 7, "object_id": "1", "object_repr": "hello", "action_flag": 2, "change_message": "[]"}}, {"model": "admin.logentry", "pk": 6, "fields": {"action_time": "2023-09-15T03:33:42.531Z", "user": 1, "content_type": 7, "object_id": "1", "object_repr": "hello", "action_flag": 2, "change_message": "[]"}}, {"model": "admin.logentry", "pk": 7, "fields": {"action_time": "2023-09-15T03:33:52.033Z", "user": 1, "content_type": 7, "object_id": "1", "object_repr": "hello", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Description\"]}}]"}}, {"model": "admin.logentry", "pk": 8, "fields": {"action_time": "2023-09-15T03:34:07.313Z", "user": 1, "content_type": 7, "object_id": "1", "object_repr": "hello", "action_flag": 2, "change_message": "[]"}}, {"model": "admin.logentry", "pk": 9, "fields": {"action_time": "2023-09-15T03:34:11.411Z", "user": 1, "content_type": 7, "object_id": "1", "object_repr": "hello", "action_flag": 2, "change_message": "[]"}}, {"model": "admin.logentry", "pk": 10, "fields": {"action_time": "2023-09-15T03:34:26.054Z", "user": 1, "content_type": 7, "object_id": "2", "object_repr": "hello1", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 11, "fields": {"action_time": "2023-09-15T03:34:50.297Z", "user": 1, "content_type": 7, "object_id": "2", "object_repr": "hello1", "action_flag": 2, "change_message": "[]"}}, {"model": "admin.logentry", "pk": 12, "fields": {"action_time": "2023-09-15T03:34:52.543Z", "user": 1, "content_type": 7, "object_id": "2", "object_repr": "hello1", "action_flag": 2, "change_message": "[]"}}, {"model": "admin.logentry", "pk": 13, "fields": {"action_time": "2023-09-15T03:39:38.241Z", "user": 1, "content_type": 7, "object_id": "2", "object_repr": "hello1", "action_flag": 2, "change_message": "[]"}}, {"model": "admin.logentry", "pk": 14, "fields": {"action_time": "2023-09-15T03:39:41.614Z", "user": 1, "content_type": 7, "object_id": "2", "object_repr": "hello1", "action_flag": 2, "change_message": "[]"}}, {"model": "admin.logentry", "pk": 15, "fields": {"action_time": "2023-09-15T03:39:43.737Z", "user": 1, "content_type": 7, "object_id": "1", "object_repr": "hello", "action_flag": 2, "change_message": "[]"}}, {"model": "admin.logentry", "pk": 16, "fields": {"action_time": "2023-09-15T03:39:46.648Z", "user": 1, "content_type": 7, "object_id": "2", "object_repr": "hello1", "action_flag": 2, "change_message": "[]"}}, {"model": "admin.logentry", "pk": 17, "fields": {"action_time": "2023-09-15T03:41:21.777Z", "user": 1, "content_type": 7, "object_id": "2", "object_repr": "hello1", "action_flag": 2, "change_message": "[]"}}, {"model": "admin.logentry", "pk": 18, "fields": {"action_time": "2023-09-15T03:41:26.672Z", "user": 1, "content_type": 7, "object_id": "2", "object_repr": "hello1", "action_flag": 2, "change_message": "[]"}}, {"model": "admin.logentry", "pk": 19, "fields": {"action_time": "2023-09-15T03:41:29.412Z", "user": 1, "content_type": 7, "object_id": "1", "object_repr": "hello", "action_flag": 2, "change_message": "[]"}}, {"model": "admin.logentry", "pk": 20, "fields": {"action_time": "2023-09-15T03:42:01.559Z", "user": 1, "content_type": 7, "object_id": "1", "object_repr": "hello", "action_flag": 2, "change_message": "[]"}}, {"model": "admin.logentry", "pk": 21, "fields": {"action_time": "2023-09-15T03:42:14.259Z", "user": 1, "content_type": 7, "object_id": "1", "object_repr": "hello", "action_flag": 2, "change_message": "[]"}}, {"model": "admin.logentry", "pk": 22, "fields": {"action_time": "2023-09-15T03:46:45.246Z", "user": 1, "content_type": 7, "object_id": "1", "object_repr": "hello", "action_flag": 2, "change_message": "[]"}}, {"model": "admin.logentry", "pk": 23, "fields": {"action_time": "2023-09-15T03:51:24.902Z", "user": 1, "content_type": 7, "object_id": "2", "object_repr": "hello1", "action_flag": 2, "change_message": "[]"}}, {"model": "admin.logentry", "pk": 24, "fields": {"action_time": "2023-09-15T04:03:30.909Z", "user": 1, "content_type": 7, "object_id": "2", "object_repr": "hello1", "action_flag": 2, "change_message": "[]"}}, {"model": "admin.logentry", "pk": 25, "fields": {"action_time": "2023-09-15T04:04:26.941Z", "user": 1, "content_type": 7, "object_id": "2", "object_repr": "hello1", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Image\"]}}]"}}, {"model": "admin.logentry", "pk": 26, "fields": {"action_time": "2023-09-15T06:56:35.765Z", "user": 1, "content_type": 7, "object_id": "3", "object_repr": "kjddkdjjd", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 27, "fields": {"action_time": "2023-09-15T07:03:02.015Z", "user": 1, "content_type": 7, "object_id": "2", "object_repr": "hello1", "action_flag": 2, "change_message": "[]"}}, {"model": "admin.logentry", "pk": 28, "fields": {"action_time": "2023-09-15T07:03:04.419Z", "user": 1, "content_type": 7, "object_id": "2", "object_repr": "hello1", "action_flag": 2, "change_message": "[]"}}, {"model": "admin.logentry", "pk": 29, "fields": {"action_time": "2023-09-15T07:03:21.692Z", "user": 1, "content_type": 7, "object_id": "1", "object_repr": "hello", "action_flag": 2, "change_message": "[]"}}, {"model": "admin.logentry", "pk": 30, "fields": {"action_time": "2023-09-15T07:03:24.283Z", "user": 1, "content_type": 7, "object_id": "1", "object_repr": "hello", "action_flag": 2, "change_message": "[]"}}, {"model": "admin.logentry", "pk": 31, "fields": {"action_time": "2023-09-15T07:03:27.329Z", "user": 1, "content_type": 7, "object_id": "1", "object_repr": "hello", "action_flag": 2, "change_message": "[]"}}, {"model": "admin.logentry", "pk": 32, "fields": {"action_time": "2023-09-15T07:04:44.666Z", "user": 1, "content_type": 7, "object_id": "2", "object_repr": "hello1", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Image\"]}}]"}}, {"model": "admin.logentry", "pk": 33, "fields": {"action_time": "2023-09-15T07:04:50.575Z", "user": 1, "content_type": 7, "object_id": "1", "object_repr": "hello", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Image\"]}}]"}}, {"model": "admin.logentry", "pk": 34, "fields": {"action_time": "2023-09-15T07:06:17.304Z", "user": 1, "content_type": 7, "object_id": "3", "object_repr": "kjddkdjjd", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Image\"]}}]"}}, {"model": "admin.logentry", "pk": 35, "fields": {"action_time": "2023-09-15T07:17:11.395Z", "user": 1, "content_type": 7, "object_id": "3", "object_repr": "welcome", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Title\", \"Image\"]}}]"}}, {"model": "admin.logentry", "pk": 36, "fields": {"action_time": "2023-09-15T07:17:21.657Z", "user": 1, "content_type": 7, "object_id": "2", "object_repr": "hello1", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 37, "fields": {"action_time": "2023-09-15T07:17:21.659Z", "user": 1, "content_type": 7, "object_id": "1", "object_repr": "hello", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 38, "fields": {"action_time": "2023-09-15T07:30:27.908Z", "user": 1, "content_type": 7, "object_id": "4", "object_repr": "10 Python Projects with Code", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 39, "fields": {"action_time": "2023-09-15T08:06:13.004Z", "user": 1, "content_type": 7, "object_id": "3", "object_repr": "welcome", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Image\"]}}]"}}, {"model": "admin.logentry", "pk": 40, "fields": {"action_time": "2023-09-15T08:13:52.418Z", "user": 1, "content_type": 7, "object_id": "5", "object_repr": "Image Caption Generator", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 41, "fields": {"action_time": "2023-09-15T08:14:31.520Z", "user": 1, "content_type": 7, "object_id": "6", "object_repr": "Weather Forecast App", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 42, "fields": {"action_time": "2023-09-15T08:16:06.363Z", "user": 1, "content_type": 7, "object_id": "3", "object_repr": "welcome", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 43, "fields": {"action_time": "2023-09-15T08:16:47.583Z", "user": 1, "content_type": 7, "object_id": "7", "object_repr": "Music Player", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 44, "fields": {"action_time": "2023-09-15T11:09:44.593Z", "user": 1, "content_type": 7, "object_id": "4", "object_repr": "10 Python Projects with Code", "action_flag": 2, "change_message": "[]"}}, {"model": "admin.logentry", "pk": 45, "fields": {"action_time": "2023-09-15T11:14:43.596Z", "user": 1, "content_type": 7, "object_id": "7", "object_repr": "Music Player", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Image\"]}}]"}}, {"model": "admin.logentry", "pk": 46, "fields": {"action_time": "2023-09-15T11:19:34.165Z", "user": 1, "content_type": 7, "object_id": "8", "object_repr": "Hello Brother", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 47, "fields": {"action_time": "2023-09-15T12:00:35.048Z", "user": 1, "content_type": 7, "object_id": "10", "object_repr": "dbkjdfbkbfkj", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 48, "fields": {"action_time": "2023-09-15T12:00:35.051Z", "user": 1, "content_type": 7, "object_id": "9", "object_repr": "jkdsjfbdjb", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 49, "fields": {"action_time": "2023-10-05T07:34:34.572Z", "user": 1, "content_type": 7, "object_id": "13", "object_repr": "hello", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 50, "fields": {"action_time": "2023-10-05T07:39:55.974Z", "user": 1, "content_type": 7, "object_id": "13", "object_repr": "hello", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 51, "fields": {"action_time": "2023-10-05T07:39:55.977Z", "user": 1, "content_type": 7, "object_id": "12", "object_repr": "Hello Habibi", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 52, "fields": {"action_time": "2023-10-05T07:39:55.978Z", "user": 1, "content_type": 7, "object_id": "11", "object_repr": "Hello Guys", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 53, "fields": {"action_time": "2023-10-05T07:39:55.979Z", "user": 1, "content_type": 7, "object_id": "8", "object_repr": "Hello Brother", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 54, "fields": {"action_time": "2023-10-05T07:40:07.570Z", "user": 1, "content_type": 7, "object_id": "7", "object_repr": "Music Player", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 55, "fields": {"action_time": "2023-10-05T07:42:35.551Z", "user": 1, "content_type": 7, "object_id": "14", "object_repr": "hello", "action_flag": 3, "change_message": ""}}, {"model": "auth.permission", "pk": 1, "fields": {"name": "Can add log entry", "content_type": 1, "codename": "add_logentry"}}, {"model": "auth.permission", "pk": 2, "fields": {"name": "Can change log entry", "content_type": 1, "codename": "change_logentry"}}, {"model": "auth.permission", "pk": 3, "fields": {"name": "Can delete log entry", "content_type": 1, "codename": "delete_logentry"}}, {"model": "auth.permission", "pk": 4, "fields": {"name": "Can view log entry", "content_type": 1, "codename": "view_logentry"}}, {"model": "auth.permission", "pk": 5, "fields": {"name": "Can add permission", "content_type": 2, "codename": "add_permission"}}, {"model": "auth.permission", "pk": 6, "fields": {"name": "Can change permission", "content_type": 2, "codename": "change_permission"}}, {"model": "auth.permission", "pk": 7, "fields": {"name": "Can delete permission", "content_type": 2, "codename": "delete_permission"}}, {"model": "auth.permission", "pk": 8, "fields": {"name": "Can view permission", "content_type": 2, "codename": "view_permission"}}, {"model": "auth.permission", "pk": 9, "fields": {"name": "Can add group", "content_type": 3, "codename": "add_group"}}, {"model": "auth.permission", "pk": 10, "fields": {"name": "Can change group", "content_type": 3, "codename": "change_group"}}, {"model": "auth.permission", "pk": 11, "fields": {"name": "Can delete group", "content_type": 3, "codename": "delete_group"}}, {"model": "auth.permission", "pk": 12, "fields": {"name": "Can view group", "content_type": 3, "codename": "view_group"}}, {"model": "auth.permission", "pk": 13, "fields": {"name": "Can add user", "content_type": 4, "codename": "add_user"}}, {"model": "auth.permission", "pk": 14, "fields": {"name": "Can change user", "content_type": 4, "codename": "change_user"}}, {"model": "auth.permission", "pk": 15, "fields": {"name": "Can delete user", "content_type": 4, "codename": "delete_user"}}, {"model": "auth.permission", "pk": 16, "fields": {"name": "Can view user", "content_type": 4, "codename": "view_user"}}, {"model": "auth.permission", "pk": 17, "fields": {"name": "Can add content type", "content_type": 5, "codename": "add_contenttype"}}, {"model": "auth.permission", "pk": 18, "fields": {"name": "Can change content type", "content_type": 5, "codename": "change_contenttype"}}, {"model": "auth.permission", "pk": 19, "fields": {"name": "Can delete content type", "content_type": 5, "codename": "delete_contenttype"}}, {"model": "auth.permission", "pk": 20, "fields": {"name": "Can view content type", "content_type": 5, "codename": "view_contenttype"}}, {"model": "auth.permission", "pk": 21, "fields": {"name": "Can add session", "content_type": 6, "codename": "add_session"}}, {"model": "auth.permission", "pk": 22, "fields": {"name": "Can change session", "content_type": 6, "codename": "change_session"}}, {"model": "auth.permission", "pk": 23, "fields": {"name": "Can delete session", "content_type": 6, "codename": "delete_session"}}, {"model": "auth.permission", "pk": 24, "fields": {"name": "Can view session", "content_type": 6, "codename": "view_session"}}, {"model": "auth.permission", "pk": 25, "fields": {"name": "Can add blog", "content_type": 7, "codename": "add_blog"}}, {"model": "auth.permission", "pk": 26, "fields": {"name": "Can change blog", "content_type": 7, "codename": "change_blog"}}, {"model": "auth.permission", "pk": 27, "fields": {"name": "Can delete blog", "content_type": 7, "codename": "delete_blog"}}, {"model": "auth.permission", "pk": 28, "fields": {"name": "Can view blog", "content_type": 7, "codename": "view_blog"}}, {"model": "auth.user", "pk": 1, "fields": {"password": "pbkdf2_sha256$600000$IKwNiIxQy4dZaZnZNd0Csx$+SATVMzaCD7gVdRJOvpOe56zwoxIZfORg3PZ0oNR+G0=", "last_login": "2023-10-05T07:24:07.647Z", "is_superuser": true, "username": "admin", "first_name": "", "last_name": "", "email": "admin@gmail.com", "is_staff": true, "is_active": true, "date_joined": "2023-09-15T02:41:07.968Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 2, "fields": {"password": "pbkdf2_sha256$600000$JQ61ufIfEMrVroOEzIhiiz$dow8ObE+4NltYRpjSuypqQx1NET9alWCu5gOaJcpbRM=", "last_login": "2023-10-05T07:14:32.597Z", "is_superuser": false, "username": "rishu", "first_name": "", "last_name": "", "email": "rishu@gmail.com", "is_staff": false, "is_active": true, "date_joined": "2023-09-15T02:42:31.419Z", "groups": [], "user_permissions": []}}, {"model": "contenttypes.contenttype", "pk": 1, "fields": {"app_label": "admin", "model": "logentry"}}, {"model": "contenttypes.contenttype", "pk": 2, "fields": {"app_label": "auth", "model": "permission"}}, {"model": "contenttypes.contenttype", "pk": 3, "fields": {"app_label": "auth", "model": "group"}}, {"model": "contenttypes.contenttype", "pk": 4, "fields": {"app_label": "auth", "model": "user"}}, {"model": "contenttypes.contenttype", "pk": 5, "fields": {"app_label": "contenttypes", "model": "contenttype"}}, {"model": "contenttypes.contenttype", "pk": 6, "fields": {"app_label": "sessions", "model": "session"}}, {"model": "contenttypes.contenttype", "pk": 7, "fields": {"app_label": "Blog", "model": "blog"}}, {"model": "sessions.session", "pk": "0rvbv2aprslsbf89plxzouz3uywuu9sj", "fields": {"session_data": ".eJxVjEEOwiAUBe_C2hDAUsGle89AHvyPVA0kpV0Z765NutDtm5n3EgHrUsLaeQ4TibPQ4vC7RaQH1w3QHfXWZGp1macoN0XutMtrI35edvfvoKCXb62iyp6iZpPzAOOzcwkZjqOxhsxxULBsNU7aeYwEDdLWUiKXaLQg8f4ACq45EA:1qh9WW:YUEtn1aLFDTkjP_6qwnI9px3K0fE9U7IUIOTTgyo1Y0", "expire_date": "2023-09-29T14:10:20.300Z"}}, {"model": "sessions.session", "pk": "1hzhv1fcoa8q6klvrl1uceh6jd6xp2g2", "fields": {"session_data": ".eJxVjEEOwiAUBe_C2hDAUsGle89AHvyPVA0kpV0Z765NutDtm5n3EgHrUsLaeQ4TibPQ4vC7RaQH1w3QHfXWZGp1macoN0XutMtrI35edvfvoKCXb62iyp6iZpPzAOOzcwkZjqOxhsxxULBsNU7aeYwEDdLWUiKXaLQg8f4ACq45EA:1qoIiN:m0WLZmZHSPhl_z3G9YMzYcSWItAOuFQ55irYrmAgBpA", "expire_date": "2023-10-19T07:24:07.650Z"}}, {"model": "Blog.blog", "pk": 4, "fields": {"title": "10 Python Projects with Code", "content": "<p data-selectable-paragraph=\"\" style='box-sizing: inherit; margin: 2em 0px -0.46em; font-weight: 400; color: rgb(36, 36, 36); word-break: break-word; font-family: source-serif-pro, Georgia, Cambria, \"Times New Roman\", Times, serif; font-style: normal; line-height: 32px; letter-spacing: -0.003em; font-size: 20px; font-variant-ligatures: normal; font-variant-caps: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: normal; background-color: rgb(255, 255, 255); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;' id=\"isPasted\">10 Python Projects with Code to Enhance Your Programming Skills &amp; You can mention in your Resume.</p><p data-selectable-paragraph=\"\" style='box-sizing: inherit; margin: 2em 0px -0.46em; font-weight: 400; color: rgb(36, 36, 36); word-break: break-word; font-family: source-serif-pro, Georgia, Cambria, \"Times New Roman\", Times, serif; font-style: normal; line-height: 32px; letter-spacing: -0.003em; font-size: 20px; font-variant-ligatures: normal; font-variant-caps: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: normal; background-color: rgb(255, 255, 255); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;'><strong style='box-sizing: inherit; font-weight: 700; font-family: source-serif-pro, Georgia, Cambria, \"Times New Roman\", Times, serif;'>Introduction</strong>:<br style=\"box-sizing: inherit;\">Python is a versatile programming language known for its simplicity and readability. It is widely used for web development, data analysis, machine learning, and automation. One of the best ways to improve your Python skills is by working on practical projects. In this blog post, we will explore ten Python projects with code that will help you enhance your programming abilities. These projects cover a range of topics and difficulty levels, allowing you to grow as a Python developer. So, let&rsquo;s dive into these exciting projects!</p><h1 data-selectable-paragraph=\"\" style='box-sizing: inherit; margin: 1.95em 0px -0.28em; font-family: sohne, \"Helvetica Neue\", Helvetica, Arial, sans-serif; color: rgb(36, 36, 36); font-style: normal; line-height: 30px; letter-spacing: -0.016em; font-weight: 600; font-size: 24px; font-variant-ligatures: normal; font-variant-caps: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: normal; background-color: rgb(255, 255, 255); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;'>1- URL Shortener:</h1><p data-selectable-paragraph=\"\" style='box-sizing: inherit; margin: 0.86em 0px -0.46em; font-weight: 400; color: rgb(36, 36, 36); word-break: break-word; font-family: source-serif-pro, Georgia, Cambria, \"Times New Roman\", Times, serif; font-style: normal; line-height: 32px; letter-spacing: -0.003em; font-size: 20px; font-variant-ligatures: normal; font-variant-caps: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: normal; background-color: rgb(255, 255, 255); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;'>A URL shortener is a handy tool to condense long website links into shorter ones. In this project, you will build a URL shortener using Python and Flask, a popular web framework. By leveraging the power of Flask, you will learn how to handle HTTP requests, generate unique short codes, and redirect users to the original URL.</p><pre style='box-sizing: inherit; margin: 56px 0px 0px; background: rgb(249, 249, 249); color: rgb(36, 36, 36); border-radius: 4px; overflow-x: auto; font-family: source-code-pro, Menlo, Monaco, \"Courier New\", Courier, monospace; padding: 32px; border: 1px solid rgb(229, 229, 229); font-size: medium; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;'><span data-selectable-paragraph=\"\" style='box-sizing: inherit; font-weight: 400; display: block; font-size: 14px; font-style: normal; letter-spacing: -0.022em; font-family: source-code-pro, Menlo, Monaco, \"Courier New\", Courier, monospace; line-height: 1.4; margin-top: -0.2em; margin-bottom: -0.2em; white-space: pre; min-width: fit-content;'><span style=\"box-sizing: inherit; color: rgb(170, 13, 145);\">from</span> flask <span style=\"box-sizing: inherit; color: rgb(170, 13, 145);\">import</span> <span style=\"box-sizing: inherit;\">Flask</span>, redirect, render_template, request<br style=\"box-sizing: inherit;\"><span style=\"box-sizing: inherit; color: rgb(170, 13, 145);\">import</span> <span style=\"box-sizing: inherit; color: rgb(92, 38, 153);\">string</span><br style=\"box-sizing: inherit;\"><span style=\"box-sizing: inherit; color: rgb(170, 13, 145);\">import</span> random</span></pre><pre style='box-sizing: inherit; margin: 16px 0px 0px; border: none; color: rgb(36, 36, 36); background: rgb(242, 242, 242); overflow-x: auto; font-family: source-code-pro, Menlo, Monaco, \"Courier New\", Courier, monospace; padding: 20px; border-radius: 0px; font-size: medium; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;'><span data-selectable-paragraph=\"\" style='box-sizing: inherit; font-weight: 400; display: block; font-size: 16px; font-style: normal; letter-spacing: -0.022em; font-family: source-code-pro, Menlo, Monaco, \"Courier New\", Courier, monospace; min-width: fit-content; line-height: 1.18; margin-top: -0.09em; margin-bottom: -0.09em; white-space: pre-wrap;'>app = Flask(__name__)</span><span data-selectable-paragraph=\"\" style='box-sizing: inherit; font-weight: 400; display: block; font-size: 16px; font-style: normal; letter-spacing: -0.022em; font-family: source-code-pro, Menlo, Monaco, \"Courier New\", Courier, monospace; min-width: fit-content; line-height: 1.18; margin-bottom: -0.09em; white-space: pre-wrap; margin-top: 0.91em;'># Dictionary to store the mappings of short codes to original URLs<br style=\"box-sizing: inherit;\">url_mapping = {}<br style=\"box-sizing: inherit;\"></span><span data-selectable-paragraph=\"\" style='box-sizing: inherit; font-weight: 400; display: block; font-size: 16px; font-style: normal; letter-spacing: -0.022em; font-family: source-code-pro, Menlo, Monaco, \"Courier New\", Courier, monospace; min-width: fit-content; line-height: 1.18; margin-bottom: -0.09em; white-space: pre-wrap; margin-top: 0.91em;'>def generate_short_code():<br style=\"box-sizing: inherit;\">    &quot;&quot;&quot;Generate a random short code.&quot;&quot;&quot;<br style=\"box-sizing: inherit;\">    characters = string.ascii_letters + string.digits<br style=\"box-sizing: inherit;\">    short_code = &#39;&#39;.join(random.choice(characters) for _ in range(6))<br style=\"box-sizing: inherit;\">    return short_code<br style=\"box-sizing: inherit;\"></span><span data-selectable-paragraph=\"\" style='box-sizing: inherit; font-weight: 400; display: block; font-size: 16px; font-style: normal; letter-spacing: -0.022em; font-family: source-code-pro, Menlo, Monaco, \"Courier New\", Courier, monospace; min-width: fit-content; line-height: 1.18; margin-bottom: -0.09em; white-space: pre-wrap; margin-top: 0.91em;'>@app.route(&#39;/&#39;, methods=[&#39;GET&#39;, &#39;POST&#39;])<br style=\"box-sizing: inherit;\">def home():<br style=\"box-sizing: inherit;\">    if request.method == &#39;POST&#39;:<br style=\"box-sizing: inherit;\">        original_url = request.form[&#39;url&#39;]<br style=\"box-sizing: inherit;\">        short_code = generate_short_code()</span><span data-selectable-paragraph=\"\" style='box-sizing: inherit; font-weight: 400; display: block; font-size: 16px; font-style: normal; letter-spacing: -0.022em; font-family: source-code-pro, Menlo, Monaco, \"Courier New\", Courier, monospace; min-width: fit-content; line-height: 1.18; margin-bottom: -0.09em; white-space: pre-wrap; margin-top: 0.91em;'>        url_mapping[short_code] = original_url</span><span data-selectable-paragraph=\"\" style='box-sizing: inherit; font-weight: 400; display: block; font-size: 16px; font-style: normal; letter-spacing: -0.022em; font-family: source-code-pro, Menlo, Monaco, \"Courier New\", Courier, monospace; min-width: fit-content; line-height: 1.18; margin-bottom: -0.09em; white-space: pre-wrap; margin-top: 0.91em;'>        short_url = request.host_url + short_code<br style=\"box-sizing: inherit;\">        return render_template(&#39;index.html&#39;, short_url=short_url)</span><span data-selectable-paragraph=\"\" style='box-sizing: inherit; font-weight: 400; display: block; font-size: 16px; font-style: normal; letter-spacing: -0.022em; font-family: source-code-pro, Menlo, Monaco, \"Courier New\", Courier, monospace; min-width: fit-content; line-height: 1.18; margin-bottom: -0.09em; white-space: pre-wrap; margin-top: 0.91em;'>    return render_template(&#39;index.html&#39;)<br style=\"box-sizing: inherit;\"></span><span data-selectable-paragraph=\"\" style='box-sizing: inherit; font-weight: 400; display: block; font-size: 16px; font-style: normal; letter-spacing: -0.022em; font-family: source-code-pro, Menlo, Monaco, \"Courier New\", Courier, monospace; min-width: fit-content; line-height: 1.18; margin-bottom: -0.09em; white-space: pre-wrap; margin-top: 0.91em;'>@app.route(&#39;/&lt;short_code&gt;&#39;)<br style=\"box-sizing: inherit;\">def redirect_to_original_url(short_code):<br style=\"box-sizing: inherit;\">    if short_code in url_mapping:<br style=\"box-sizing: inherit;\">        original_url = url_mapping[short_code]<br style=\"box-sizing: inherit;\">        return redirect(original_url)<br style=\"box-sizing: inherit;\">    else:<br style=\"box-sizing: inherit;\">        return &quot;Short URL not found.&quot;<br style=\"box-sizing: inherit;\"></span><span data-selectable-paragraph=\"\" style='box-sizing: inherit; font-weight: 400; display: block; font-size: 16px; font-style: normal; letter-spacing: -0.022em; font-family: source-code-pro, Menlo, Monaco, \"Courier New\", Courier, monospace; min-width: fit-content; line-height: 1.18; margin-bottom: -0.09em; white-space: pre-wrap; margin-top: 0.91em;'>if __name__ == &#39;__main__&#39;:<br style=\"box-sizing: inherit;\">    app.run(debug=True)</span></pre><p data-selectable-paragraph=\"\" style='box-sizing: inherit; margin: 2em 0px -0.46em; font-weight: 400; color: rgb(36, 36, 36); word-break: break-word; font-family: source-serif-pro, Georgia, Cambria, \"Times New Roman\", Times, serif; font-style: normal; line-height: 32px; letter-spacing: -0.003em; font-size: 20px; font-variant-ligatures: normal; font-variant-caps: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: normal; background-color: rgb(255, 255, 255); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;'><em style=\"box-sizing: inherit; font-style: italic;\">Also check👉:&nbsp;</em><a href=\"https://tinyurl.com/200bestEbooks\" rel=\"noopener ugc nofollow\" target=\"_blank\" style=\"box-sizing: inherit; color: inherit; text-decoration: underline; -webkit-tap-highlight-color: transparent;\"><em style=\"box-sizing: inherit; font-style: italic;\">200 E-books pack download in cheap cost limited time offer</em></a></p><h1 data-selectable-paragraph=\"\" style='box-sizing: inherit; margin: 1.95em 0px -0.28em; font-family: sohne, \"Helvetica Neue\", Helvetica, Arial, sans-serif; color: rgb(36, 36, 36); font-style: normal; line-height: 30px; letter-spacing: -0.016em; font-weight: 600; font-size: 24px; font-variant-ligatures: normal; font-variant-caps: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: normal; background-color: rgb(255, 255, 255); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;'>2. Image Caption Generator:</h1><p data-selectable-paragraph=\"\" style='box-sizing: inherit; margin: 0.86em 0px -0.46em; font-weight: 400; color: rgb(36, 36, 36); word-break: break-word; font-family: source-serif-pro, Georgia, Cambria, \"Times New Roman\", Times, serif; font-style: normal; line-height: 32px; letter-spacing: -0.003em; font-size: 20px; font-variant-ligatures: normal; font-variant-caps: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: normal; background-color: rgb(255, 255, 255); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;'>Image captioning is a fascinating application of deep learning. In this project, you will use Python and the TensorFlow library to create an image caption generator. By combining computer vision and natural language processing techniques, your program will be able to generate descriptive captions for images automatically.</p><pre style='box-sizing: inherit; margin: 56px 0px 0px; background: rgb(249, 249, 249); color: rgb(36, 36, 36); border-radius: 4px; overflow-x: auto; font-family: source-code-pro, Menlo, Monaco, \"Courier New\", Courier, monospace; padding: 32px; border: 1px solid rgb(229, 229, 229); font-size: medium; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;'><span data-selectable-paragraph=\"\" style='box-sizing: inherit; font-weight: 400; display: block; font-size: 14px; font-style: normal; letter-spacing: -0.022em; font-family: source-code-pro, Menlo, Monaco, \"Courier New\", Courier, monospace; line-height: 1.4; margin-top: -0.2em; margin-bottom: -0.2em; white-space: pre; min-width: fit-content;'><span style=\"box-sizing: inherit; color: rgb(170, 13, 145);\">import</span> tensorflow <span style=\"box-sizing: inherit; color: rgb(170, 13, 145);\">as</span> tf<br style=\"box-sizing: inherit;\"><span style=\"box-sizing: inherit; color: rgb(170, 13, 145);\">import</span> matplotlib.<span style=\"box-sizing: inherit;\">pyplot</span> <span style=\"box-sizing: inherit; color: rgb(170, 13, 145);\">as</span> plt<br style=\"box-sizing: inherit;\"><span style=\"box-sizing: inherit; color: rgb(170, 13, 145);\">import</span> numpy <span style=\"box-sizing: inherit; color: rgb(170, 13, 145);\">as</span> np<br style=\"box-sizing: inherit;\"><span style=\"box-sizing: inherit; color: rgb(170, 13, 145);\">from</span> <span style=\"box-sizing: inherit;\">PIL</span> <span style=\"box-sizing: inherit; color: rgb(170, 13, 145);\">import</span> <span style=\"box-sizing: inherit;\">Image</span><br style=\"box-sizing: inherit;\"><span style=\"box-sizing: inherit; color: rgb(170, 13, 145);\">import</span> os</span></pre><pre style='box-sizing: inherit; margin: 16px 0px 0px; border: none; color: rgb(36, 36, 36); background: rgb(242, 242, 242); overflow-x: auto; font-family: source-code-pro, Menlo, Monaco, \"Courier New\", Courier, monospace; padding: 20px; border-radius: 0px; font-size: medium; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;'><span data-selectable-paragraph=\"\" style='box-sizing: inherit; font-weight: 400; display: block; font-size: 16px; font-style: normal; letter-spacing: -0.022em; font-family: source-code-pro, Menlo, Monaco, \"Courier New\", Courier, monospace; min-width: fit-content; line-height: 1.18; margin-top: -0.09em; margin-bottom: -0.09em; white-space: pre-wrap;'># Load the pre-trained InceptionV3 model<br style=\"box-sizing: inherit;\">inception_model = tf.keras.applications.InceptionV3(include_top=True, weights=&#39;imagenet&#39;)</span><span data-selectable-paragraph=\"\" style='box-sizing: inherit; font-weight: 400; display: block; font-size: 16px; font-style: normal; letter-spacing: -0.022em; font-family: source-code-pro, Menlo, Monaco, \"Courier New\", Courier, monospace; min-width: fit-content; line-height: 1.18; margin-bottom: -0.09em; white-space: pre-wrap; margin-top: 0.91em;'># Load the tokenizer<br style=\"box-sizing: inherit;\">tokenizer = tf.keras.preprocessing.text.Tokenizer()<br style=\"box-sizing: inherit;\">tokenizer_path = &#39;tokenizer.pkl&#39;<br style=\"box-sizing: inherit;\">tokenizer = tf.keras.preprocessing.text.tokenizer_from_json(tokenizer_path)</span><span data-selectable-paragraph=\"\" style='box-sizing: inherit; font-weight: 400; display: block; font-size: 16px; font-style: normal; letter-spacing: -0.022em; font-family: source-code-pro, Menlo, Monaco, \"Courier New\", Courier, monospace; min-width: fit-content; line-height: 1.18; margin-bottom: -0.09em; white-space: pre-wrap; margin-top: 0.91em;'># Define the maximum sequence length (number of words) for captions<br style=\"box-sizing: inherit;\">max_sequence_length = 20</span><span data-selectable-paragraph=\"\" style='box-sizing: inherit; font-weight: 400; display: block; font-size: 16px; font-style: normal; letter-spacing: -0.022em; font-family: source-code-pro, Menlo, Monaco, \"Courier New\", Courier, monospace; min-width: fit-content; line-height: 1.18; margin-bottom: -0.09em; white-space: pre-wrap; margin-top: 0.91em;'># Load the pre-trained caption generation model<br style=\"box-sizing: inherit;\">model_path = &#39;caption_generator_model.h5&#39;<br style=\"box-sizing: inherit;\">model = tf.keras.models.load_model(model_path)</span><span data-selectable-paragraph=\"\" style='box-sizing: inherit; font-weight: 400; display: block; font-size: 16px; font-style: normal; letter-spacing: -0.022em; font-family: source-code-pro, Menlo, Monaco, \"Courier New\", Courier, monospace; min-width: fit-content; line-height: 1.18; margin-bottom: -0.09em; white-space: pre-wrap; margin-top: 0.91em;'># Load the word-to-index and index-to-word mappings<br style=\"box-sizing: inherit;\">word_to_index = tokenizer.word_index<br style=\"box-sizing: inherit;\">index_to_word = {index: word for word, index in word_to_index.items()}</span><span data-selectable-paragraph=\"\" style='box-sizing: inherit; font-weight: 400; display: block; font-size: 16px; font-style: normal; letter-spacing: -0.022em; font-family: source-code-pro, Menlo, Monaco, \"Courier New\", Courier, monospace; min-width: fit-content; line-height: 1.18; margin-bottom: -0.09em; white-space: pre-wrap; margin-top: 0.91em;'># Load the pre-trained InceptionV3 model<br style=\"box-sizing: inherit;\">inception_model = tf.keras.applications.InceptionV3(include_top=True, weights=&#39;imagenet&#39;)</span><span data-selectable-paragraph=\"\" style='box-sizing: inherit; font-weight: 400; display: block; font-size: 16px; font-style: normal; letter-spacing: -0.022em; font-family: source-code-pro, Menlo, Monaco, \"Courier New\", Courier, monospace; min-width: fit-content; line-height: 1.18; margin-bottom: -0.09em; white-space: pre-wrap; margin-top: 0.91em;'>def preprocess_image(image_path):<br style=\"box-sizing: inherit;\">    &quot;&quot;&quot;Preprocess the image for input to the InceptionV3 model.&quot;&quot;&quot;<br style=\"box-sizing: inherit;\">    img = Image.open(image_path)<br style=\"box-sizing: inherit;\">    img = img.resize((299, 299))<br style=\"box-sizing: inherit;\">    img = np.array(img)<br style=\"box-sizing: inherit;\">    img = img / 255.0<br style=\"box-sizing: inherit;\">    img = img.reshape(1, 299, 299, 3)<br style=\"box-sizing: inherit;\">    return img</span><span data-selectable-paragraph=\"\" style='box-sizing: inherit; font-weight: 400; display: block; font-size: 16px; font-style: normal; letter-spacing: -0.022em; font-family: source-code-pro, Menlo, Monaco, \"Courier New\", Courier, monospace; min-width: fit-content; line-height: 1.18; margin-bottom: -0.09em; white-space: pre-wrap; margin-top: 0.91em;'>def generate_caption(image_path):<br style=\"box-sizing: inherit;\">    &quot;&quot;&quot;Generate a caption for the given image.&quot;&quot;&quot;<br style=\"box-sizing: inherit;\">    img = preprocess_image(image_path)<br style=\"box-sizing: inherit;\">    features = inception_model.predict(img)<br style=\"box-sizing: inherit;\">    features = features.reshape(1, -1)<br style=\"box-sizing: inherit;\">    <br style=\"box-sizing: inherit;\">    start_token = tokenizer.word_index[&#39;&lt;start&gt;&#39;]<br style=\"box-sizing: inherit;\">    end_token = tokenizer.word_index[&#39;&lt;end&gt;&#39;]<br style=\"box-sizing: inherit;\">    <br style=\"box-sizing: inherit;\">    caption = []<br style=\"box-sizing: inherit;\">    input_sequence = [start_token]<br style=\"box-sizing: inherit;\">    for _ in range(max_sequence_length):<br style=\"box-sizing: inherit;\">        sequence = np.array(input_sequence)<br style=\"box-sizing: inherit;\">        y_pred = model.predict([features, sequence])<br style=\"box-sizing: inherit;\">        y_pred = np.argmax(y_pred)<br style=\"box-sizing: inherit;\">        <br style=\"box-sizing: inherit;\">        if index_to_word[y_pred] == &#39;&lt;end&gt;&#39;:<br style=\"box-sizing: inherit;\">            break<br style=\"box-sizing: inherit;\">        <br style=\"box-sizing: inherit;\">        caption.append(index_to_word[y_pred])<br style=\"box-sizing: inherit;\">        input_sequence.append(y_pred)<br style=\"box-sizing: inherit;\">    <br style=\"box-sizing: inherit;\">    generated_caption = &#39; &#39;.join(caption)<br style=\"box-sizing: inherit;\">    return generated_caption</span><span data-selectable-paragraph=\"\" style='box-sizing: inherit; font-weight: 400; display: block; font-size: 16px; font-style: normal; letter-spacing: -0.022em; font-family: source-code-pro, Menlo, Monaco, \"Courier New\", Courier, monospace; min-width: fit-content; line-height: 1.18; margin-bottom: -0.09em; white-space: pre-wrap; margin-top: 0.91em;'># Path to the image for caption generation<br style=\"box-sizing: inherit;\">image_path = &#39;example_image.jpg&#39;</span><span data-selectable-paragraph=\"\" style='box-sizing: inherit; font-weight: 400; display: block; font-size: 16px; font-style: normal; letter-spacing: -0.022em; font-family: source-code-pro, Menlo, Monaco, \"Courier New\", Courier, monospace; min-width: fit-content; line-height: 1.18; margin-bottom: -0.09em; white-space: pre-wrap; margin-top: 0.91em;'># Generate caption for the image<br style=\"box-sizing: inherit;\">caption = generate_caption(image_path)<br style=\"box-sizing: inherit;\">print(&#39;Generated Caption:&#39;, caption)</span><span data-selectable-paragraph=\"\" style='box-sizing: inherit; font-weight: 400; display: block; font-size: 16px; font-style: normal; letter-spacing: -0.022em; font-family: source-code-pro, Menlo, Monaco, \"Courier New\", Courier, monospace; min-width: fit-content; line-height: 1.18; margin-bottom: -0.09em; white-space: pre-wrap; margin-top: 0.91em;'># Display the image<br style=\"box-sizing: inherit;\">img = Image.open(image_path)<br style=\"box-sizing: inherit;\">plt.imshow(img)<br style=\"box-sizing: inherit;\">plt.axis(&#39;off&#39;)<br style=\"box-sizing: inherit;\">plt.show()</span></pre><h1 data-selectable-paragraph=\"\" style='box-sizing: inherit; margin: 1.95em 0px -0.28em; font-family: sohne, \"Helvetica Neue\", Helvetica, Arial, sans-serif; color: rgb(36, 36, 36); font-style: normal; line-height: 30px; letter-spacing: -0.016em; font-weight: 600; font-size: 24px; font-variant-ligatures: normal; font-variant-caps: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: normal; background-color: rgb(255, 255, 255); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;'>3. Weather Forecast App:</h1><p data-selectable-paragraph=\"\" style='box-sizing: inherit; margin: 0.86em 0px -0.46em; font-weight: 400; color: rgb(36, 36, 36); word-break: break-word; font-family: source-serif-pro, Georgia, Cambria, \"Times New Roman\", Times, serif; font-style: normal; line-height: 32px; letter-spacing: -0.003em; font-size: 20px; font-variant-ligatures: normal; font-variant-caps: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: normal; background-color: rgb(255, 255, 255); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;'>Building a weather forecast app will give you valuable experience in working with APIs. You will use Python and the OpenWeatherMap API to fetch weather data for a given location and display it to the user. This project will involve making HTTP requests, parsing JSON responses, and presenting the data in a user-friendly way.</p><pre style='box-sizing: inherit; margin: 56px 0px 0px; background: rgb(249, 249, 249); color: rgb(36, 36, 36); border-radius: 4px; overflow-x: auto; font-family: source-code-pro, Menlo, Monaco, \"Courier New\", Courier, monospace; padding: 32px; border: 1px solid rgb(229, 229, 229); font-size: medium; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;'><span data-selectable-paragraph=\"\" style='box-sizing: inherit; font-weight: 400; display: block; font-size: 14px; font-style: normal; letter-spacing: -0.022em; font-family: source-code-pro, Menlo, Monaco, \"Courier New\", Courier, monospace; line-height: 1.4; margin-top: -0.2em; margin-bottom: -0.2em; white-space: pre; min-width: fit-content;'><span style=\"box-sizing: inherit; color: rgb(170, 13, 145);\">import</span> requests<br style=\"box-sizing: inherit;\"><span style=\"box-sizing: inherit; color: rgb(170, 13, 145);\">import</span> json</span></pre><pre style='box-sizing: inherit; margin: 16px 0px 0px; border: none; color: rgb(36, 36, 36); background: rgb(242, 242, 242); overflow-x: auto; font-family: source-code-pro, Menlo, Monaco, \"Courier New\", Courier, monospace; padding: 20px; border-radius: 0px; font-size: medium; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;'><span data-selectable-paragraph=\"\" style='box-sizing: inherit; font-weight: 400; display: block; font-size: 16px; font-style: normal; letter-spacing: -0.022em; font-family: source-code-pro, Menlo, Monaco, \"Courier New\", Courier, monospace; min-width: fit-content; line-height: 1.18; margin-top: -0.09em; margin-bottom: -0.09em; white-space: pre-wrap;'>def get_weather_data(api_key, city):<br style=\"box-sizing: inherit;\">    &quot;&quot;&quot;Get weather data for a specific city using the OpenWeatherMap API.&quot;&quot;&quot;<br style=\"box-sizing: inherit;\">    base_url = &quot;http://api.openweathermap.org/data/2.5/weather&quot;<br style=\"box-sizing: inherit;\">    params = {<br style=\"box-sizing: inherit;\">        &quot;q&quot;: city,<br style=\"box-sizing: inherit;\">        &quot;appid&quot;: api_key,<br style=\"box-sizing: inherit;\">        &quot;units&quot;: &quot;metric&quot;<br style=\"box-sizing: inherit;\">    }<br style=\"box-sizing: inherit;\">    response = requests.get(base_url, params=params)<br style=\"box-sizing: inherit;\">    data = response.json()<br style=\"box-sizing: inherit;\">    return data</span><span data-selectable-paragraph=\"\" style='box-sizing: inherit; font-weight: 400; display: block; font-size: 16px; font-style: normal; letter-spacing: -0.022em; font-family: source-code-pro, Menlo, Monaco, \"Courier New\", Courier, monospace; min-width: fit-content; line-height: 1.18; margin-bottom: -0.09em; white-space: pre-wrap; margin-top: 0.91em;'>def display_weather(data):<br style=\"box-sizing: inherit;\">    &quot;&quot;&quot;Display weather information.&quot;&quot;&quot;<br style=\"box-sizing: inherit;\">    if data[&quot;cod&quot;] != &quot;404&quot;:<br style=\"box-sizing: inherit;\">        city = data[&quot;name&quot;]<br style=\"box-sizing: inherit;\">        country = data[&quot;sys&quot;][&quot;country&quot;]<br style=\"box-sizing: inherit;\">        temperature = data[&quot;main&quot;][&quot;temp&quot;]<br style=\"box-sizing: inherit;\">        description = data[&quot;weather&quot;][0][&quot;description&quot;]<br style=\"box-sizing: inherit;\">        humidity = data[&quot;main&quot;][&quot;humidity&quot;]<br style=\"box-sizing: inherit;\">        wind_speed = data[&quot;wind&quot;][&quot;speed&quot;]</span><span data-selectable-paragraph=\"\" style='box-sizing: inherit; font-weight: 400; display: block; font-size: 16px; font-style: normal; letter-spacing: -0.022em; font-family: source-code-pro, Menlo, Monaco, \"Courier New\", Courier, monospace; min-width: fit-content; line-height: 1.18; margin-bottom: -0.09em; white-space: pre-wrap; margin-top: 0.91em;'>        print(f&quot;Weather in {city}, {country}:&quot;)<br style=\"box-sizing: inherit;\">        print(f&quot;Temperature: {temperature}&deg;C&quot;)<br style=\"box-sizing: inherit;\">        print(f&quot;Description: {description}&quot;)<br style=\"box-sizing: inherit;\">        print(f&quot;Humidity: {humidity}%&quot;)<br style=\"box-sizing: inherit;\">        print(f&quot;Wind Speed: {wind_speed} km/h&quot;)<br style=\"box-sizing: inherit;\">    else:<br style=\"box-sizing: inherit;\">        print(&quot;City not found. Please try again.&quot;)</span><span data-selectable-paragraph=\"\" style='box-sizing: inherit; font-weight: 400; display: block; font-size: 16px; font-style: normal; letter-spacing: -0.022em; font-family: source-code-pro, Menlo, Monaco, \"Courier New\", Courier, monospace; min-width: fit-content; line-height: 1.18; margin-bottom: -0.09em; white-space: pre-wrap; margin-top: 0.91em;'>def main():<br style=\"box-sizing: inherit;\">    # API key from OpenWeatherMap<br style=\"box-sizing: inherit;\">    api_key = &quot;YOUR_API_KEY&quot;</span><span data-selectable-paragraph=\"\" style='box-sizing: inherit; font-weight: 400; display: block; font-size: 16px; font-style: normal; letter-spacing: -0.022em; font-family: source-code-pro, Menlo, Monaco, \"Courier New\", Courier, monospace; min-width: fit-content; line-height: 1.18; margin-bottom: -0.09em; white-space: pre-wrap; margin-top: 0.91em;'>    # Get the city name from the user<br style=\"box-sizing: inherit;\">    city = input(&quot;Enter the city name: &quot;)</span><span data-selectable-paragraph=\"\" style='box-sizing: inherit; font-weight: 400; display: block; font-size: 16px; font-style: normal; letter-spacing: -0.022em; font-family: source-code-pro, Menlo, Monaco, \"Courier New\", Courier, monospace; min-width: fit-content; line-height: 1.18; margin-bottom: -0.09em; white-space: pre-wrap; margin-top: 0.91em;'>    # Get weather data for the city<br style=\"box-sizing: inherit;\">    weather_data = get_weather_data(api_key, city)</span><span data-selectable-paragraph=\"\" style='box-sizing: inherit; font-weight: 400; display: block; font-size: 16px; font-style: normal; letter-spacing: -0.022em; font-family: source-code-pro, Menlo, Monaco, \"Courier New\", Courier, monospace; min-width: fit-content; line-height: 1.18; margin-bottom: -0.09em; white-space: pre-wrap; margin-top: 0.91em;'>    # Display weather information<br style=\"box-sizing: inherit;\">    display_weather(weather_data)</span><span data-selectable-paragraph=\"\" style='box-sizing: inherit; font-weight: 400; display: block; font-size: 16px; font-style: normal; letter-spacing: -0.022em; font-family: source-code-pro, Menlo, Monaco, \"Courier New\", Courier, monospace; min-width: fit-content; line-height: 1.18; margin-bottom: -0.09em; white-space: pre-wrap; margin-top: 0.91em;'>if __name__ == &quot;__main__&quot;:<br style=\"box-sizing: inherit;\">    main()</span></pre><h1 data-selectable-paragraph=\"\" style='box-sizing: inherit; margin: 1.95em 0px -0.28em; font-family: sohne, \"Helvetica Neue\", Helvetica, Arial, sans-serif; color: rgb(36, 36, 36); font-style: normal; line-height: 30px; letter-spacing: -0.016em; font-weight: 600; font-size: 24px; font-variant-ligatures: normal; font-variant-caps: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: normal; background-color: rgb(255, 255, 255); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;'>4. Music Player:</h1><p data-selectable-paragraph=\"\" style='box-sizing: inherit; margin: 0.86em 0px -0.46em; font-weight: 400; color: rgb(36, 36, 36); word-break: break-word; font-family: source-serif-pro, Georgia, Cambria, \"Times New Roman\", Times, serif; font-style: normal; line-height: 32px; letter-spacing: -0.003em; font-size: 20px; font-variant-ligatures: normal; font-variant-caps: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: normal; background-color: rgb(255, 255, 255); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;'>Creating a music player in Python is an excellent way to explore graphical user interfaces (GUIs). You can use the Tkinter library to design a basic music player that allows users to browse their music library, play songs, pause, stop, and adjust the volume. This project will help you gain insights into event-driven programming and GUI development.</p><pre style='box-sizing: inherit; margin: 56px 0px 0px; background: rgb(249, 249, 249); color: rgb(36, 36, 36); border-radius: 4px; overflow-x: auto; font-family: source-code-pro, Menlo, Monaco, \"Courier New\", Courier, monospace; padding: 32px; border: 1px solid rgb(229, 229, 229); font-size: medium; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;'><span data-selectable-paragraph=\"\" style='box-sizing: inherit; font-weight: 400; display: block; font-size: 14px; font-style: normal; letter-spacing: -0.022em; font-family: source-code-pro, Menlo, Monaco, \"Courier New\", Courier, monospace; line-height: 1.4; margin-top: -0.2em; margin-bottom: -0.2em; white-space: pre; min-width: fit-content;'><span style=\"box-sizing: inherit; color: rgb(170, 13, 145);\">import</span> tkinter <span style=\"box-sizing: inherit; color: rgb(170, 13, 145);\">as</span> tk<br style=\"box-sizing: inherit;\"><span style=\"box-sizing: inherit; color: rgb(170, 13, 145);\">import</span> os<br style=\"box-sizing: inherit;\"><span style=\"box-sizing: inherit; color: rgb(170, 13, 145);\">from</span> pygame <span style=\"box-sizing: inherit; color: rgb(170, 13, 145);\">import</span> mixer</span></pre><pre style='box-sizing: inherit; margin: 16px 0px 0px; border: none; color: rgb(36, 36, 36); background: rgb(242, 242, 242); overflow-x: auto; font-family: source-code-pro, Menlo, Monaco, \"Courier New\", Courier, monospace; padding: 20px; border-radius: 0px; font-size: medium; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;'><span data-selectable-paragraph=\"\" style='box-sizing: inherit; font-weight: 400; display: block; font-size: 16px; font-style: normal; letter-spacing: -0.022em; font-family: source-code-pro, Menlo, Monaco, \"Courier New\", Courier, monospace; min-width: fit-content; line-height: 1.18; margin-top: -0.09em; margin-bottom: -0.09em; white-space: pre-wrap;'>class MusicPlayer:<br style=\"box-sizing: inherit;\">    def __init__(self, root):<br style=\"box-sizing: inherit;\">        self.root = root<br style=\"box-sizing: inherit;\">        self.root.title(&quot;Music Player&quot;)<br style=\"box-sizing: inherit;\">        self.root.geometry(&quot;300x100&quot;)</span><span data-selectable-paragraph=\"\" style='box-sizing: inherit; font-weight: 400; display: block; font-size: 16px; font-style: normal; letter-spacing: -0.022em; font-family: source-code-pro, Menlo, Monaco, \"Courier New\", Courier, monospace; min-width: fit-content; line-height: 1.18; margin-bottom: -0.09em; white-space: pre-wrap; margin-top: 0.91em;'>        # Initialize Pygame mixer<br style=\"box-sizing: inherit;\">        mixer.init()</span><span data-selectable-paragraph=\"\" style='box-sizing: inherit; font-weight: 400; display: block; font-size: 16px; font-style: normal; letter-spacing: -0.022em; font-family: source-code-pro, Menlo, Monaco, \"Courier New\", Courier, monospace; min-width: fit-content; line-height: 1.18; margin-bottom: -0.09em; white-space: pre-wrap; margin-top: 0.91em;'>        # Create a variable to store the current playing status<br style=\"box-sizing: inherit;\">        self.playing = False</span><span data-selectable-paragraph=\"\" style='box-sizing: inherit; font-weight: 400; display: block; font-size: 16px; font-style: normal; letter-spacing: -0.022em; font-family: source-code-pro, Menlo, Monaco, \"Courier New\", Courier, monospace; min-width: fit-content; line-height: 1.18; margin-bottom: -0.09em; white-space: pre-wrap; margin-top: 0.91em;'>        # Create a variable to store the current selected song<br style=\"box-sizing: inherit;\">        self.current_song = None</span><span data-selectable-paragraph=\"\" style='box-sizing: inherit; font-weight: 400; display: block; font-size: 16px; font-style: normal; letter-spacing: -0.022em; font-family: source-code-pro, Menlo, Monaco, \"Courier New\", Courier, monospace; min-width: fit-content; line-height: 1.18; margin-bottom: -0.09em; white-space: pre-wrap; margin-top: 0.91em;'>        # Create the UI elements<br style=\"box-sizing: inherit;\">        self.label = tk.Label(root, text=&quot;Music Player&quot;)<br style=\"box-sizing: inherit;\">        self.label.pack()</span><span data-selectable-paragraph=\"\" style='box-sizing: inherit; font-weight: 400; display: block; font-size: 16px; font-style: normal; letter-spacing: -0.022em; font-family: source-code-pro, Menlo, Monaco, \"Courier New\", Courier, monospace; min-width: fit-content; line-height: 1.18; margin-bottom: -0.09em; white-space: pre-wrap; margin-top: 0.91em;'>        self.play_button = tk.Button(root, text=&quot;Play&quot;, command=self.play_music)<br style=\"box-sizing: inherit;\">        self.play_button.pack()</span><span data-selectable-paragraph=\"\" style='box-sizing: inherit; font-weight: 400; display: block; font-size: 16px; font-style: normal; letter-spacing: -0.022em; font-family: source-code-pro, Menlo, Monaco, \"Courier New\", Courier, monospace; min-width: fit-content; line-height: 1.18; margin-bottom: -0.09em; white-space: pre-wrap; margin-top: 0.91em;'>        self.stop_button = tk.Button(root, text=&quot;Stop&quot;, command=self.stop_music)<br style=\"box-sizing: inherit;\">        self.stop_button.pack()</span><span data-selectable-paragraph=\"\" style='box-sizing: inherit; font-weight: 400; display: block; font-size: 16px; font-style: normal; letter-spacing: -0.022em; font-family: source-code-pro, Menlo, Monaco, \"Courier New\", Courier, monospace; min-width: fit-content; line-height: 1.18; margin-bottom: -0.09em; white-space: pre-wrap; margin-top: 0.91em;'>        self.browse_button = tk.Button(root, text=&quot;Browse&quot;, command=self.browse_music)<br style=\"box-sizing: inherit;\">        self.browse_button.pack()</span><span data-selectable-paragraph=\"\" style='box-sizing: inherit; font-weight: 400; display: block; font-size: 16px; font-style: normal; letter-spacing: -0.022em; font-family: source-code-pro, Menlo, Monaco, \"Courier New\", Courier, monospace; min-width: fit-content; line-height: 1.18; margin-bottom: -0.09em; white-space: pre-wrap; margin-top: 0.91em;'>    def play_music(self):<br style=\"box-sizing: inherit;\">        if self.current_song:<br style=\"box-sizing: inherit;\">            if not self.playing:<br style=\"box-sizing: inherit;\">                mixer.music.load(self.current_song)<br style=\"box-sizing: inherit;\">                mixer.music.play()<br style=\"box-sizing: inherit;\">                self.play_button.config(text=&quot;Pause&quot;)<br style=\"box-sizing: inherit;\">                self.playing = True<br style=\"box-sizing: inherit;\">            else:<br style=\"box-sizing: inherit;\">                mixer.music.pause()<br style=\"box-sizing: inherit;\">                self.play_button.config(text=&quot;Play&quot;)<br style=\"box-sizing: inherit;\">                self.playing = False</span><span data-selectable-paragraph=\"\" style='box-sizing: inherit; font-weight: 400; display: block; font-size: 16px; font-style: normal; letter-spacing: -0.022em; font-family: source-code-pro, Menlo, Monaco, \"Courier New\", Courier, monospace; min-width: fit-content; line-height: 1.18; margin-bottom: -0.09em; white-space: pre-wrap; margin-top: 0.91em;'>    def stop_music(self):<br style=\"box-sizing: inherit;\">        mixer.music.stop()<br style=\"box-sizing: inherit;\">        self.play_button.config(text=&quot;Play&quot;)<br style=\"box-sizing: inherit;\">        self.playing = False</span><span data-selectable-paragraph=\"\" style='box-sizing: inherit; font-weight: 400; display: block; font-size: 16px; font-style: normal; letter-spacing: -0.022em; font-family: source-code-pro, Menlo, Monaco, \"Courier New\", Courier, monospace; min-width: fit-content; line-height: 1.18; margin-bottom: -0.09em; white-space: pre-wrap; margin-top: 0.91em;'>    def browse_music(self):<br style=\"box-sizing: inherit;\">        self.current_song = tk.filedialog.askopenfilename(initialdir=os.getcwd(), title=&quot;Select Song&quot;,<br style=\"box-sizing: inherit;\">                                                         filetypes=((&quot;Audio Files&quot;, &quot;*.mp3&quot;), (&quot;All Files&quot;, &quot;*.*&quot;)))<br style=\"box-sizing: inherit;\">        self.label.config(text=os.path.basename(self.current_song))</span><span data-selectable-paragraph=\"\" style='box-sizing: inherit; font-weight: 400; display: block; font-size: 16px; font-style: normal; letter-spacing: -0.022em; font-family: source-code-pro, Menlo, Monaco, \"Courier New\", Courier, monospace; min-width: fit-content; line-height: 1.18; margin-bottom: -0.09em; white-space: pre-wrap; margin-top: 0.91em;'>if __name__ == &#39;__main__&#39;:<br style=\"box-sizing: inherit;\">    root = tk.Tk()<br style=\"box-sizing: inherit;\">    music_player = MusicPlayer(root)<br style=\"box-sizing: inherit;\">    root.mainloop()</span></pre><h1 data-selectable-paragraph=\"\" style='box-sizing: inherit; margin: 1.95em 0px -0.28em; font-family: sohne, \"Helvetica Neue\", Helvetica, Arial, sans-serif; color: rgb(36, 36, 36); font-style: normal; line-height: 30px; letter-spacing: -0.016em; font-weight: 600; font-size: 24px; font-variant-ligatures: normal; font-variant-caps: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: normal; background-color: rgb(255, 255, 255); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;'>5. Sudoku Solver:</h1><p data-selectable-paragraph=\"\" style='box-sizing: inherit; margin: 0.86em 0px -0.46em; font-weight: 400; color: rgb(36, 36, 36); word-break: break-word; font-family: source-serif-pro, Georgia, Cambria, \"Times New Roman\", Times, serif; font-style: normal; line-height: 32px; letter-spacing: -0.003em; font-size: 20px; font-variant-ligatures: normal; font-variant-caps: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: normal; background-color: rgb(255, 255, 255); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;'>Solving Sudoku puzzles is a classic programming challenge that tests your problem-solving skills. In this project, you will build a Sudoku solver using Python and the backtracking algorithm. You will learn how to represent the puzzle, implement the solver, and visualize the solution using a graphical interface.</p>", "slug": "10-python-projects-with-codeop4ce", "user": 1, "image": "images/ai_event.jpeg", "created_at": "2023-09-15T07:30:27.906Z", "upload_to": "2023-09-15T11:09:44.591Z"}}, {"model": "Blog.blog", "pk": 5, "fields": {"title": "Image Caption Generator", "content": "<p data-selectable-paragraph=\"\" style='box-sizing: inherit; margin: 0.86em 0px -0.46em; font-weight: 400; color: rgb(36, 36, 36); word-break: break-word; font-family: source-serif-pro, Georgia, Cambria, \"Times New Roman\", Times, serif; font-style: normal; line-height: 32px; letter-spacing: -0.003em; font-size: 20px; font-variant-ligatures: normal; font-variant-caps: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: normal; background-color: rgb(255, 255, 255); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;' id=\"isPasted\">Image captioning is a fascinating application of deep learning. In this project, you will use Python and the TensorFlow library to create an image caption generator. By combining computer vision and natural language processing techniques, your program will be able to generate descriptive captions for images automatically.</p><pre style='box-sizing: inherit; margin: 56px 0px 0px; background: rgb(249, 249, 249); color: rgb(36, 36, 36); border-radius: 4px; overflow-x: auto; font-family: source-code-pro, Menlo, Monaco, \"Courier New\", Courier, monospace; padding: 32px; border: 1px solid rgb(229, 229, 229); font-size: medium; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;'>\r\n<span style='box-sizing: inherit; color: rgb(170, 13, 145); font-family: source-code-pro, Menlo, Monaco, \"Courier New\", Courier, monospace; font-size: 14px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: -0.308px; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: pre; background-color: rgb(249, 249, 249); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;' id=\"isPasted\">import</span><span style='color: rgb(36, 36, 36); font-family: source-code-pro, Menlo, Monaco, \"Courier New\", Courier, monospace; font-size: 14px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: -0.308px; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: pre; background-color: rgb(249, 249, 249); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; display: inline !important; float: none;'> tensorflow </span><span style='box-sizing: inherit; color: rgb(170, 13, 145); font-family: source-code-pro, Menlo, Monaco, \"Courier New\", Courier, monospace; font-size: 14px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: -0.308px; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: pre; background-color: rgb(249, 249, 249); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;'>as</span><span style='color: rgb(36, 36, 36); font-family: source-code-pro, Menlo, Monaco, \"Courier New\", Courier, monospace; font-size: 14px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: -0.308px; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: pre; background-color: rgb(249, 249, 249); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; display: inline !important; float: none;'> tf</span><br style=\"box-sizing: inherit; color: rgb(36, 36, 36); font-family: source-code-pro, Menlo, Monaco, &quot;Courier New&quot;, Courier, monospace; font-size: 14px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: -0.308px; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: pre; background-color: rgb(249, 249, 249); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;\"><span style='box-sizing: inherit; color: rgb(170, 13, 145); font-family: source-code-pro, Menlo, Monaco, \"Courier New\", Courier, monospace; font-size: 14px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: -0.308px; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: pre; background-color: rgb(249, 249, 249); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;'>import</span><span style='color: rgb(36, 36, 36); font-family: source-code-pro, Menlo, Monaco, \"Courier New\", Courier, monospace; font-size: 14px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: -0.308px; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: pre; background-color: rgb(249, 249, 249); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; display: inline !important; float: none;'> matplotlib.</span><span style='box-sizing: inherit; color: rgb(36, 36, 36); font-family: source-code-pro, Menlo, Monaco, \"Courier New\", Courier, monospace; font-size: 14px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: -0.308px; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: pre; background-color: rgb(249, 249, 249); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;'>pyplot</span><span style='color: rgb(36, 36, 36); font-family: source-code-pro, Menlo, Monaco, \"Courier New\", Courier, monospace; font-size: 14px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: -0.308px; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: pre; background-color: rgb(249, 249, 249); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; display: inline !important; float: none;'> </span><span style='box-sizing: inherit; color: rgb(170, 13, 145); font-family: source-code-pro, Menlo, Monaco, \"Courier New\", Courier, monospace; font-size: 14px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: -0.308px; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: pre; background-color: rgb(249, 249, 249); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;'>as</span><span style='color: rgb(36, 36, 36); font-family: source-code-pro, Menlo, Monaco, \"Courier New\", Courier, monospace; font-size: 14px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: -0.308px; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: pre; background-color: rgb(249, 249, 249); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; display: inline !important; float: none;'> plt</span><br style=\"box-sizing: inherit; color: rgb(36, 36, 36); font-family: source-code-pro, Menlo, Monaco, &quot;Courier New&quot;, Courier, monospace; font-size: 14px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: -0.308px; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: pre; background-color: rgb(249, 249, 249); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;\"><span style='box-sizing: inherit; color: rgb(170, 13, 145); font-family: source-code-pro, Menlo, Monaco, \"Courier New\", Courier, monospace; font-size: 14px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: -0.308px; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: pre; background-color: rgb(249, 249, 249); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;'>import</span><span style='color: rgb(36, 36, 36); font-family: source-code-pro, Menlo, Monaco, \"Courier New\", Courier, monospace; font-size: 14px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: -0.308px; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: pre; background-color: rgb(249, 249, 249); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; display: inline !important; float: none;'> numpy </span><span style='box-sizing: inherit; color: rgb(170, 13, 145); font-family: source-code-pro, Menlo, Monaco, \"Courier New\", Courier, monospace; font-size: 14px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: -0.308px; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: pre; background-color: rgb(249, 249, 249); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;'>as</span><span style='color: rgb(36, 36, 36); font-family: source-code-pro, Menlo, Monaco, \"Courier New\", Courier, monospace; font-size: 14px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: -0.308px; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: pre; background-color: rgb(249, 249, 249); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; display: inline !important; float: none;'> np</span><br style=\"box-sizing: inherit; color: rgb(36, 36, 36); font-family: source-code-pro, Menlo, Monaco, &quot;Courier New&quot;, Courier, monospace; font-size: 14px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: -0.308px; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: pre; background-color: rgb(249, 249, 249); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;\"><span style='box-sizing: inherit; color: rgb(170, 13, 145); font-family: source-code-pro, Menlo, Monaco, \"Courier New\", Courier, monospace; font-size: 14px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: -0.308px; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: pre; background-color: rgb(249, 249, 249); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;'>from</span><span style='color: rgb(36, 36, 36); font-family: source-code-pro, Menlo, Monaco, \"Courier New\", Courier, monospace; font-size: 14px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: -0.308px; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: pre; background-color: rgb(249, 249, 249); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; display: inline !important; float: none;'> </span><span style='box-sizing: inherit; color: rgb(36, 36, 36); font-family: source-code-pro, Menlo, Monaco, \"Courier New\", Courier, monospace; font-size: 14px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: -0.308px; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: pre; background-color: rgb(249, 249, 249); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;'>PIL</span><span style='color: rgb(36, 36, 36); font-family: source-code-pro, Menlo, Monaco, \"Courier New\", Courier, monospace; font-size: 14px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: -0.308px; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: pre; background-color: rgb(249, 249, 249); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; display: inline !important; float: none;'> </span><span style='box-sizing: inherit; color: rgb(170, 13, 145); font-family: source-code-pro, Menlo, Monaco, \"Courier New\", Courier, monospace; font-size: 14px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: -0.308px; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: pre; background-color: rgb(249, 249, 249); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;'>import</span><span style='color: rgb(36, 36, 36); font-family: source-code-pro, Menlo, Monaco, \"Courier New\", Courier, monospace; font-size: 14px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: -0.308px; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: pre; background-color: rgb(249, 249, 249); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; display: inline !important; float: none;'> </span><span style='box-sizing: inherit; color: rgb(36, 36, 36); font-family: source-code-pro, Menlo, Monaco, \"Courier New\", Courier, monospace; font-size: 14px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: -0.308px; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: pre; background-color: rgb(249, 249, 249); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;'>Image</span><br style=\"box-sizing: inherit; color: rgb(36, 36, 36); font-family: source-code-pro, Menlo, Monaco, &quot;Courier New&quot;, Courier, monospace; font-size: 14px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: -0.308px; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: pre; background-color: rgb(249, 249, 249); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;\"><span style='box-sizing: inherit; color: rgb(170, 13, 145); font-family: source-code-pro, Menlo, Monaco, \"Courier New\", Courier, monospace; font-size: 14px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: -0.308px; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: pre; background-color: rgb(249, 249, 249); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;'>import</span><span style='color: rgb(36, 36, 36); font-family: source-code-pro, Menlo, Monaco, \"Courier New\", Courier, monospace; font-size: 14px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: -0.308px; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: pre; background-color: rgb(249, 249, 249); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; display: inline !important; float: none;'> os</span></pre>", "slug": "image-caption-generator", "user": 2, "image": "images/direction_of_steepest_ascent_descent.png", "created_at": "2023-09-15T08:13:52.416Z", "upload_to": "2023-09-15T08:13:52.416Z"}}, {"model": "Blog.blog", "pk": 6, "fields": {"title": "Weather Forecast App", "content": "<p><span style='color: rgb(36, 36, 36); font-family: source-serif-pro, Georgia, Cambria, \"Times New Roman\", Times, serif; font-size: 20px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: -0.06px; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: normal; background-color: rgb(255, 255, 255); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; display: inline !important; float: none;' id=\"isPasted\">Building a weather forecast app will give you valuable experience in working with APIs. You will use Python and the OpenWeatherMap API to fetch weather data for a given location and display it to the user. This project will involve making HTTP requests, parsing JSON responses, and presenting the data in a user-friendly way.</span></p>", "slug": "weather-forecast-app", "user": 2, "image": "images/Gradient_of_a_multivariable_function.png", "created_at": "2023-09-15T08:14:31.518Z", "upload_to": "2023-09-15T08:14:31.518Z"}}]